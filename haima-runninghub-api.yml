server:
  port: 5001
  undertow:
    max-http-post-size: 0
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程,数量和CPU 内核数目一样即可
    io-threads: 8
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载  io-threads*8
    worker-threads: 32
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
    #   buffers-per-region: 1024 # 这个参数不需要写了
    # 是否分配的直接内存
    direct-buffers: true

management:
  server:
    port: 5002
  endpoints:
    web:
      exposure:
        include: '*'
    health:
      show-details: ALWAYS
  info:
    env:
      enabled: true

eureka:
  host: 172.16.33.30
  port: 8761
  client:
    service-url:
      defaultZone: http://${eureka.host}:${eureka.port}/eureka/
  instance:
    prefer-ip-address: true
    leaseExpirationDurationInSeconds: 2
    leaseRenewalIntervalInSeconds: 1

spring:
  application:
    name: haima-runninghub-api
  config:
    import: runninghub.yml
  http:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: root
      url: jdbc:mysql://172.16.211.93:3306/rh?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
      stat-view-servlet:
        enabled: true
        allow: ""
        url-pattern: /druid/*
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 10000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  data:
    redis:
      host: 172.16.211.93
      port: 6379
      password: Abcd123
      #客户端超时时间单位是毫秒 默认是2000
      timeout: 10000
      database: 10
      jedis:
        pool:
          max-active: 8   # 连接池最大连接数（使用负值表示没有限制）
          max-wait: -1    # 连接池分配连接最大阻塞等待时间（阻塞时间到，抛出异常。使用负值表示无限期阻塞）
          max-idle: 8     # 连接池中的最大空闲连接数
          min-idle: 0     # 连接池中的最小空闲连接数

rest:
  connectionValidateAfterInactivityMs: 20000
  keepAliveTargetHost:
    127.0.0.1: 20
    192.168.1.1: 30

store:
  type: minio
  endpoint: http://172.16.23.20:9000
  netEndpoint: https://rh-dev.haimacloud.com:5443/storage
  accessKey: il8cLxqr6Avo2rvdlaAY
  secretKey: BgksvecvJRpbj5fiachzx9QrSrgKFalTMGS9xNjj

logging:
  level:
    com.haima.runninghub.api.*: debug
    com.haima.runninghub.data.mapper.*: debug